@using Orchard.Utility.Extensions
@model Orchard.ContentTypes.ViewModels.EditPartFieldViewModel
@{
    var fieldNameId = Model.Name.HtmlClassify();
    var partNameId = Model.Part.Name.HtmlClassify();
    var accordionId = String.Format("accordion-{0}-{1}", partNameId, fieldNameId);
    var accordionPanelId = String.Format("accordion-panel-{0}", fieldNameId);
}
<div id="@accordionId" class="panel-group accordion accordion-semi">
    <div class="panel panel-default">
        <div class="panel-heading information">
            <h4 class="panel-title group">
                <a data-toggle="collapse" data-parent="#@accordionId" href="#@accordionPanelId" aria-expanded="false" class="collapsed">
                    <i class="icon s7-angle-down"></i> @String.Format("{0} ({1})", Model.DisplayName, Model.FieldDefinition._Definition.Name)
                </a>
                <a href="@Url.Action("EditField", new {area = "Orchard.ContentTypes", id = Model.Part.Name, name = Model.Name})" class="edit-field">
                    <span class="icon s7-note"></span>
                </a>
                <a href="@Url.Action("RemoveFieldFrom", new {area = "Orchard.ContentTypes", id = Model.Part.Name, name = Model.Name})" class="remove-field" itemprop="RemoveUrl UnsafeUrl">
                    <span class="icon s7-close"></span>
                </a>
            </h4>
        </div>
        <div id="@accordionPanelId" class="panel-collapse collapse" aria-expanded="false" style="height: 0px;">
            <div class="panel-body">
                <div class="content-type-settings">
                    @{Html.RenderTemplates(Model.Templates);}
                    @Html.HiddenFor(m => m.Name)
                    @Html.HiddenFor(m => m.FieldDefinition.Name)@Html.HiddenFor(m => m.Index)
                </div>
            </div>
        </div>
    </div>
</div>